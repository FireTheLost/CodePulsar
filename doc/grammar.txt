---------------------------------KEY---------------------------------

Key:
    | "?" : Zero Or One Times
    | "*" : Zero Or More Times
    | "+" : One Or More Times

-------------------------------GRAMMAR-------------------------------

start:
	| declaration*

declaration:
    | variable_declaration
	| function_declaration

variable_declaration:
	| ("var" | "const") IDENTIFIER (":" DATATYPE ("?")?)? ("=" expression)? ";"

function_declaration:
	| "fun" IDENTIFIER "(" parameter? ")" block

parameter:
	| parameter_signature ("," parameter_signature)*

parameter_signature:
	| IDENTIFIER ":" DATATYPE ("?")?
	| IDENTIFIER "=" DATA

block:
	| "{" statement* "}"

statement:
	| if_statement
	| while_statement
	| return_statement
	| variable_declaration
	| print_statement
	| expression_statement

if_statement:
	| "if" expression block ("else" (if_statement | block))?

while_statement:
	| "while" expression block

return_statement:
	| "return" expression? ";"

print_statement:
    | "print" expression_statement

expression_statement:
	| expression ";"

expression:
	| assignment

assignment:
	| IDENTIFIER ("=" | "+=" | "-=" | "*=" | "/=") assignment
	| logical_or

logical_or:
	| logical_and ("||" logical_and)*

logical_and:
	| equality ("&&" equality)*

equality:
	| comparison (("!=" | "==") comparison)*

comparison:
	| term ((">" | ">=" | "<" | "<=") term)*

term:
	| factor (("-" | "+") factor)*

factor:
	| unary (("/" | "*" | "%") unary)*

unary:
    | ("!" | "-" | "+") unary
    | primary

primary:
    | IDENTIFIER
    | DATA
    | "(" expression ")"